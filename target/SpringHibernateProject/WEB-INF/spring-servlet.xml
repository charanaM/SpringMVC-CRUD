<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright 2006-2007 hSenid Software International (Pvt) Limited.
  ~  All Rights Reserved.
  ~
  ~ These materials are unpublished, proprietary, confidential source code of
  ~ hSenid Software International (Pvt) Limited and constitute a TRADE SECRET
  ~ of hSenid Software International (Pvt) Limited.
  ~
  ~ hSenid Software International (Pvt) Limited retains all title to and intellectual
  ~ property rights in these materials.
  -->



<!-- creating spring configuration file-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvn="http://www.springframework.org/schema/mvc" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- specifing base package-->
    <context:component-scan base-package="com.hsm"/>

    <!-- getting database properties-->
    <context:property-placeholder location="classpath:application.properties"/>

    <mvn:annotation-driven />

    <!-- specify resource location to load styling-->
    <!-- <mvc:resources mapping="/resources/**" location="/resources/"/>  -->

    <!-- view resolver-->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>



    <!-- datasource-->
    <bean
            class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
        <property name="driverClassName" value="${database.driver}"></property>
        <property name="url" value="${database.url}"></property>
        <property name="username" value="${database.user}"></property>
        <property name="password" value="${database.password}"></property>
    </bean>


    <!-- Hibernate SessionFactory
    org.springframework.orm.hibernate4.LocalSessionFactoryBean-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            </props>
        </property>
        <property name="packagesToScan" value="com.hsm.model"></property>
    </bean>

    <!-- Transaction-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>





    <!--&lt;!&ndash; JDBC Template bean&ndash;&gt;-->
    <!--<bean id="userJDBCTemplate" class="com.hsm.dao.UserDAOImplement">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>